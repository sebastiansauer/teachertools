% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_names.R
\name{match_names}
\alias{match_names}
\title{Match names}
\usage{
match_names(df1, df2, first_n_chrs = -1)
}
\arguments{
\item{df1}{first data frame}

\item{df2}{second data frame}

\item{first_n_chrs}{take only the first n chrs from df1 joint name, default -1}
}
\value{
data frame with four columns, name1, name2, name, match (T or F)
}
\description{
Check which names from persons in two tibbles match
}
\details{
Assume there are two lists of names (each consisting of first names(s) and)
last name. You would like to know which names do match and which do not.
This function return a tibble showing the matched and non-matched names.
The function excepts in both data frames (df1, df2)
the columns "nachname" and "vorname".
To match the names in the two dataframes, the first and last names are
concatenated, and (optionally) stubbed to the first n characters
(only for df1 at them moment). If you do not want the stub the length of the name,
leave the value to its default, ie to -1.
The function returns a df with four columns:
name1 (concatenated name from df1), name2, name (names from both data frames),
match (TRUE or FALSE).
Note that there's not check for capitalization.
}
\examples{
match_names(data.frame(vorname = "John", nachname = "Doe"), data.frame(vorname = "John", nachname = "Doe"))
 A tibble: 1 Ã— 4
name1    name     name2    is_match
<glue>   <glue>   <glue>   <lgl>
  1 Doe John Doe John Doe John TRUE

}
