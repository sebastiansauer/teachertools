% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_csv.R
\name{prep_csv}
\alias{prep_csv}
\title{prep_csv}
\usage{
prep_csv(
  submission_file,
  path_to_submissions = "submissions/",
  path_to_train_data,
  path_to_test_data,
  max_row = NULL,
  start_id = 1L,
  name_output_var = "y",
  name_id_var = "id",
  name_pred_column = "pred",
  verbose = TRUE
)
}
\arguments{
\item{submission_file}{name of csv file with predictions (chr)}

\item{path_to_submissions}{path to submission folder with submission files (chr)}

\item{path_to_train_data}{path to train data file, regular csv file expected (chr)}

\item{path_to_test_data}{path to CONTROL (test) data file (with solution/y), regular csv file expected  (Chr)}

\item{max_row}{how many rows should be prepared maximally (int, defaults to NULL)?}

\item{start_id}{number of the first id (int, defaults to 1)}

\item{name_output_var}{name of the variable to be predicted (chr, defaults to "y")}

\item{name_id_var}{name of the id variable (chr, defaults to "id")?}

\item{name_pred_column}{name of the columns with the predictions (chr, defaults to "pred")?}

\item{verbose}{more output (lgl, defaults to TRUE)?}
}
\value{
sanitized data frame of individual submission. See details.
}
\description{
Prepares a submission csv file for subsequent computation of prediction error
}
\details{
Takes a submission file as as input, as well as the train and test data files,
and irons out some glitches so that the prediction error can be computed
in a subsequent step (not part of this function).
Each single submissions consists of a number of submissions.
The submssions are expected to be a data frame with two columns:
\enumerate{
\item id: the unique id of each prediction (integer, positive)
\item pred: the predicted value for each instance
Note that the id must be shared knowledge,
i.e., the student must submit an id that is used by the teacher,
otherwise the predictions cannot be matched.
If the two column names are not "id" and "pred", the function
assumes the first and last column to be the relevant ones.
If only one column is provided as submission data frame,
the function assumes that the column contains the predictions. An id column is
added in this case.
The output variable will be renamed to "y", in order to simplify the downstream work.
Any missing values in the submission will be filled with the (arithmetic) mean.
The submission does not necessarily be of a standard csv format, as
\code{data.table::fread} is able to guess formats. However, for the train and test data file, a standard csv file is expected (comma as deliminators, US centric locale).
Column names of submissions files are transformed to lower case.
}

The function returns a data frame with the the columns mentioned above (id, pred).
The returned dataframes contains some attributes: (1) "comments_to_student", where hints about gross errors are mentioned, (2) "fail" to indicate pass/fail of the test, here if gross errors (eg., no data submitted) are present, (3), "na_prop": the proportion of na in the prediction column.
}
\examples{
\dontrun{prep_csv(my_submission_file, path_train, path_test, max_row = 500, start_id = 800)}
}
